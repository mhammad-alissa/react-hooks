{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseImperativeHandleDemo.js\";\nimport React, { useImperativeHandle, useRef, forwardRef } from \"react\";\n\nfunction UseImperativeHandleDemo() {\n  const childRef = useRef(null);\n\n  const handleBtnClick = () => {\n    // invoking child component's method from parent component\n    childRef.current.print();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Parent Div\"), /*#__PURE__*/React.createElement(Child, {\n    ref: childRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst Child = forwardRef((props, ref) => {\n  useImperativeHandle(ref, () => {\n    return {\n      print: () => {\n        console.log(\"child method invoked!\");\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, \"Child Div\");\n});\nexport default UseImperativeHandleDemo;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseImperativeHandleDemo.js"],"names":["React","useImperativeHandle","useRef","forwardRef","UseImperativeHandleDemo","childRef","handleBtnClick","current","print","Child","props","ref","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;;AAEA,SAASC,uBAAT,GAAmC;AACjC,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMI,cAAc,GAAG,MAAM;AAC3B;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD,GAHD;;AAKA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAE,MAAMF,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAED,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,MAAMI,KAAK,GAAGN,UAAU,CAAC,CAACO,KAAD,EAAQC,GAAR,KAAgB;AACvCV,EAAAA,mBAAmB,CAACU,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLH,MAAAA,KAAK,EAAE,MAAM;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AAHI,KAAP;AAKD,GANkB,CAAnB;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAVuB,CAAxB;AAYA,eAAeT,uBAAf","sourcesContent":["import React, { useImperativeHandle, useRef, forwardRef } from \"react\";\n\nfunction UseImperativeHandleDemo() {\n  const childRef = useRef(null);\n\n  const handleBtnClick = () => {\n    // invoking child component's method from parent component\n    childRef.current.print();\n  };\n\n  return (\n    <>\n      <button onClick={() => handleBtnClick()}>Parent Div</button>\n      <Child ref={childRef} />\n    </>\n  );\n}\n\nconst Child = forwardRef((props, ref) => {\n  useImperativeHandle(ref, () => {\n    return {\n      print: () => {\n        console.log(\"child method invoked!\");\n      }\n    };\n  });\n\n  return <button>Child Div</button>;\n});\n\nexport default UseImperativeHandleDemo;\n"]},"metadata":{},"sourceType":"module"}