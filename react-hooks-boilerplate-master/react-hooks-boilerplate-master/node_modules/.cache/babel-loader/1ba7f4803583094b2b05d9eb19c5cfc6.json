{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseDebugValueDemo.js\";\nimport React, { useEffect, useState, useDebugValue } from \"react\";\n\nconst useCustomHook = (msg, delay) => {\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => {\n      setMessage(msg);\n    }, delay);\n  });\n  useDebugValue(message ? \"Now set!!\" : \"Still not set!!\");\n  return message;\n};\n\nfunction UseDebugValueExample() {\n  const customHookMsg = useCustomHook(\"Custom hook is working fine!\", 3000);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, customHookMsg);\n}\n\nexport default UseDebugValueExample;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseDebugValueDemo.js"],"names":["React","useEffect","useState","useDebugValue","useCustomHook","msg","delay","message","setMessage","setTimeout","UseDebugValueExample","customHookMsg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;;AAEA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAACH,GAAD,CAAV;AACD,KAFS,EAEPC,KAFO,CAAV;AAGD,GAJQ,CAAT;AAKAH,EAAAA,aAAa,CAACI,OAAO,GAAG,WAAH,GAAiB,iBAAzB,CAAb;AACA,SAAOA,OAAP;AACD,CATD;;AAWA,SAASG,oBAAT,GAAgC;AAC9B,QAAMC,aAAa,GAAGP,aAAa,CAAC,8BAAD,EAAiC,IAAjC,CAAnC;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,aAAN,CAAP;AACD;;AAED,eAAeD,oBAAf","sourcesContent":["import React, { useEffect, useState, useDebugValue } from \"react\";\n\nconst useCustomHook = (msg, delay) => {\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => {\n      setMessage(msg);\n    }, delay);\n  });\n  useDebugValue(message ? \"Now set!!\" : \"Still not set!!\");\n  return message;\n};\n\nfunction UseDebugValueExample() {\n  const customHookMsg = useCustomHook(\"Custom hook is working fine!\", 3000);\n  return <div>{customHookMsg}</div>;\n}\n\nexport default UseDebugValueExample;\n"]},"metadata":{},"sourceType":"module"}