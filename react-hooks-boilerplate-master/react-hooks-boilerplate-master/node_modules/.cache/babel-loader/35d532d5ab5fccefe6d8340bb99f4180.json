{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseMemoDemo.js\";\nimport React, { useState, useMemo } from \"react\";\n\nfunction UseMemoDemo() {\n  const [array, setArray] = useState([1, 2, 3, 4, 5]);\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n    setArray([...array, count]);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  }; // this is recomputated only when array mutates\n\n\n  const heavyComputation = useMemo(() => {\n    return array.reduce((a, b) => a + b, 0);\n  }, [array]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => increment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => decrement(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Counter is \", count), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Sum is \", heavyComputation));\n}\n\nexport default UseMemoDemo;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseMemoDemo.js"],"names":["React","useState","useMemo","UseMemoDemo","array","setArray","count","setCount","increment","decrement","heavyComputation","reduce","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,KAAX,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAM;AACtBF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD,CATqB,CAarB;;;AACA,QAAMI,gBAAgB,GAAGR,OAAO,CAAC,MAAM;AACrC,WAAOE,KAAK,CAACO,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,CAAP;AACD,GAF+B,EAE7B,CAACT,KAAD,CAF6B,CAAhC;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMI,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBH,KAAjB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaI,gBAAb,CAJF,CADF;AAQD;;AAED,eAAeP,WAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nfunction UseMemoDemo() {\n  const [array, setArray] = useState([1, 2, 3, 4, 5]);\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n    setArray([...array, count]);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  // this is recomputated only when array mutates\n  const heavyComputation = useMemo(() => {\n    return array.reduce((a, b) => a + b, 0);\n  }, [array]);\n\n  return (\n    <div>\n      <button onClick={() => increment()}>Increment</button>\n      <button onClick={() => decrement()}>Decrement</button>\n      <div>Counter is {count}</div>\n      <div>Sum is {heavyComputation}</div>\n    </div>\n  );\n}\n\nexport default UseMemoDemo;\n"]},"metadata":{},"sourceType":"module"}