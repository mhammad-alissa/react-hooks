{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\MyApp.js\";\nimport React, { useState } from \"react\";\nexport const myContext = React.createContext();\n\nfunction MyApp() {\n  const [myAppVariable, setMyAppVariable] = useState(0);\n  return /*#__PURE__*/React.createElement(myContext.Provider, {\n    value: {\n      myAppVariable: myAppVariable\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"myAppVariable value is \", myAppVariable), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setMyAppVariable(myAppVariable * 2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"myAppVariable\"));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/MyApp.js"],"names":["React","useState","myContext","createContext","MyApp","myAppVariable","setMyAppVariable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,SAAS,GAAGF,KAAK,CAACG,aAAN,EAAlB;;AAEP,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,CAAD,CAAlD;AAEA,sBACE,oBAAC,SAAD,CAAW,QAAX;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,aAAa,EAAEA;AADV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA6BA,aAA7B,CALF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAYD;;AAED,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nexport const myContext = React.createContext();\n\nfunction MyApp() {\n  const [myAppVariable, setMyAppVariable] = useState(0);\n\n  return (\n    <myContext.Provider\n      value={{\n        myAppVariable: myAppVariable\n      }}\n    >\n      <div>myAppVariable value is {myAppVariable}</div>\n      <button onClick={() => setMyAppVariable(myAppVariable * 2)}>\n        myAppVariable\n      </button>\n    </myContext.Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}