{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseCallbackDemo.js\";\nimport React, { useState, useCallback } from \"react\";\n\nfunction UseCallbackDemo() {\n  const [count, setCount] = useState(0); // method is created only when count value changes\n\n  const increment = useCallback(() => {\n    setCount(count + 1);\n  }, [count]); // method is created only when count value changes\n\n  const decrement = useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => increment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => decrement(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Counter is \", count));\n}\n\nexport default UseCallbackDemo;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseCallbackDemo.js"],"names":["React","useState","useCallback","UseCallbackDemo","count","setCount","increment","decrement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC,CADyB,CAGzB;;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAAC,MAAM;AAClCG,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAF4B,EAE1B,CAACA,KAAD,CAF0B,CAA7B,CAJyB,CAQzB;;AACA,QAAMG,SAAS,GAAGL,WAAW,CAAC,MAAM;AAClCG,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAF4B,EAE1B,CAACA,KAAD,CAF0B,CAA7B;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAME,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBH,KAAjB,CAHF,CADF;AAOD;;AAED,eAAeD,eAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nfunction UseCallbackDemo() {\n  const [count, setCount] = useState(0);\n\n  // method is created only when count value changes\n  const increment = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  // method is created only when count value changes\n  const decrement = useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  return (\n    <div>\n      <button onClick={() => increment()}>Increment</button>\n      <button onClick={() => decrement()}>Decrement</button>\n      <div>Counter is {count}</div>\n    </div>\n  );\n}\n\nexport default UseCallbackDemo;\n"]},"metadata":{},"sourceType":"module"}