{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseEffectDemo.js\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction UseEffectDemo() {\n  const [count, setCount] = useState(0);\n\n  const handleBtnClick = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    // this will be triggered everytime component re-renders\n    console.log(\"Count value is changed\");\n    return () => {\n      // this will be triggered everytime component unmounts\n      console.log(\"Component is going to be unmounted\");\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Counter is \", count));\n}\n\nexport default UseEffectDemo;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseEffectDemo.js"],"names":["React","useState","useEffect","UseEffectDemo","count","setCount","handleBtnClick","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAO,MAAM;AACX;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD,KAHD;AAID,GAPQ,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMF,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqDF,KAArD,CADF,CADF;AAKD;;AAED,eAAeD,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction UseEffectDemo() {\n  const [count, setCount] = useState(0);\n\n  const handleBtnClick = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    // this will be triggered everytime component re-renders\n    console.log(\"Count value is changed\");\n    return () => {\n      // this will be triggered everytime component unmounts\n      console.log(\"Component is going to be unmounted\");\n    };\n  });\n\n  return (\n    <div>\n      <button onClick={() => handleBtnClick()}>Counter is {count}</button>\n    </div>\n  );\n}\n\nexport default UseEffectDemo;\n"]},"metadata":{},"sourceType":"module"}