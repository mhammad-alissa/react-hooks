{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orange\\\\Downloads\\\\react-hooks\\\\react-hooks-boilerplate-master\\\\react-hooks-boilerplate-master\\\\src\\\\examples\\\\UseContextDemo.js\";\nimport React, { useState, useContext } from \"react\";\nimport myContext from \"./MyApp\";\n\nfunction UseContextDemo() {\n  // context will contain all values defined in the myContext.Provider of MyApp component\n  const context = useContext(myContext);\n  const [count, setCount] = useState(0);\n\n  const handleBtnClick = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Counter is \", count));\n}\n\nexport default UseContextDemo;","map":{"version":3,"sources":["C:/Users/orange/Downloads/react-hooks/react-hooks-boilerplate-master/react-hooks-boilerplate-master/src/examples/UseContextDemo.js"],"names":["React","useState","useContext","myContext","UseContextDemo","context","count","setCount","handleBtnClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,SAASC,cAAT,GAA0B;AACxB;AACA,QAAMC,OAAO,GAAGH,UAAU,CAACC,SAAD,CAA1B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAME,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqDF,KAArD,CADF,CADF;AAKD;;AAED,eAAeF,cAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport myContext from \"./MyApp\";\n\nfunction UseContextDemo() {\n  // context will contain all values defined in the myContext.Provider of MyApp component\n  const context = useContext(myContext);\n\n  const [count, setCount] = useState(0);\n\n  const handleBtnClick = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={() => handleBtnClick()}>Counter is {count}</button>\n    </div>\n  );\n}\n\nexport default UseContextDemo;\n"]},"metadata":{},"sourceType":"module"}